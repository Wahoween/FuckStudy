<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans    http://www.springframework.org/schema/beans/spring-beans.xsd
       http://code.alibabatech.com/schema/dubbo    http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!--dumbo:application 就是整个项目在分布式架构中的唯一名称，可以在 name 属性中配置，另外还可以配置 owner 字段，表示属于谁。-->
    <dubbo:application name="provider"/>

    <!--dumbo:monitor 监控中心配置， 用于配置连接监控中心相关信息，可以不配置，不是必须的参数。-->
    <!--<dumbo:monitor protocol="registry"/>-->

    <!--dumbo:registry 配置注册中心的信息，比如，这里我们可以配置 zookeeper 作为我们的注册中心。
    address 是注册中心的地址，这里我们配置的是 N/A 表示由 dubbo 自动分配地址。或者说是一种直连的方式，不通过注册中心。-->
    <!--<dumbo:registry address="N/A"/>-->
    <dubbo:registry address="zookeeper://localhost:2181"/>

    <dubbo:config-center address="zookeeper://localhost:2181"/>

    <!--dubbo:protocol 服务发布的时候 dumbo 依赖什么协议，可以配置 dumbo、webservice、Thrift、Hessain、http等协议。-->
    <dubbo:protocol name="dubbo" port="20880"/>

    <!--dubbo:service 这个节点就是我们的重点了，当我们服务发布的时候，我们就是通过这个配置将我们的服务发布出去的。interface 是接口的包路径，ref 是配置的接口的 bean。-->
    <dubbo:service interface="com.fuckstudy.service.ProviderService" ref="providerService" protocol="dubbo"/>

    <bean id="providerService" class="com.fuckstudy.service.impl.ProviderServiceImpl"/>
</beans>